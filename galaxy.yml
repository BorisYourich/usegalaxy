---
- hosts: all
  name: apt update & pip
  become: true
  become_user: root
  tasks:
    - ansible.builtin.apt:
        name: python3-pip
        update_cache: yes
      when: ansible_os_family == 'Debian'

- hosts: dbservers
  become: true
  become_user: root
  pre_tasks:
    - name: Install Dependencies
      package:
        name: 'acl'
  roles:
    - galaxyproject.postgresql
    - role: galaxyproject.postgresql_objects
      become: true
      become_user: postgres

- hosts: noletsencrypt
  become: true
  become_user: root
  tasks:
    - name: Certificate
      copy:
        src: "{{ nginx_ssl_src_dir }}/{{ nginx_conf_ssl_certificate | basename }}"
        dest: "/etc/ssl/cert.pem"
        mode: "0644"
    - name: RabbitMQ key
      copy:
        content: "{{ sslkeys[nginx_conf_ssl_certificate_key | basename] }}"
        dest: "{{ rabbitmq_conf_ssl_certificate_key }}"
        owner: "999"
        mode: "0400"

- hosts: galaxyservers
  become: true
  become_user: root
  vars_files:
    - group_vars/secret.yml
  pre_tasks:
    - pip:
        name: passlib
    - htpasswd:
        path: /etc/nginx/passwd
        name: admin        # Pick a username
        password: "{{ vault_reports_admin_password }}" # and a password
        owner: www-data    # nginx on centos
        group: root
        mode: 0640
    - name: Install Dependencies
      package:
        name: ['acl', 'bzip2', 'git', 'make', 'tar', 'python3-bioblend', 'python3-venv', 'python3-setuptools']
    - name: Install RHEL/CentOS/Rocky specific dependencies
      package:
        name: ['tmpwatch']
      when: ansible_os_family == 'RedHat'
    - name: Install Debian/Ubuntu specific dependencies
      package:
        name: ['tmpreaper']
      when: ansible_os_family == 'Debian'
    - git:
        repo: 'https://github.com/usegalaxy-eu/libraries-training-repo'
        dest: /libraries/
    - ansible.builtin.group:
        name: galaxy
    - ansible.builtin.user:
        name: galaxy
        group: galaxy
        comment: Galaxy system user
    - name: Create the data storage directory
      file:
        owner: galaxy
        group: galaxy
        path: "{{ galaxy_mutable_data_dir }}"
        state: directory
        mode: '0755'
#    - name: Create the nginx upload job files store
#      file:
#        owner: www-data
#        group: galaxy
#        path: "{{ datastore }}/data/_upload_job_files"
#        state: directory
#        mode: '0775'
#    - name: Create the client body temp path   
#      file:
#        owner: www-data
#        group: galaxy
#        path: "{{ datastore }}/data/nginx_upload_store"
#        state: directory
#        mode: '0775'
  roles:
    - galaxyproject.tusd
    - usegalaxy_eu.apptainer
    - galaxyproject.galaxy
    - usegalaxy_eu.tpv_auto_lint
    - role: galaxyproject.miniconda
      become: true
      become_user: "{{ galaxy_user_name }}"
    - geerlingguy.redis
    - usegalaxy_eu.flower
    - galaxyproject.nginx
    - galaxyproject.proftpd
    - geerlingguy.docker
    - usegalaxy_eu.rabbitmqserver
    - galaxyproject.tiaas2
    - galaxyproject.gxadmin
    - galaxyproject.cvmfs
    - dj-wasabi.telegraf
  post_tasks:
    - name: Setup gxadmin cleanup task
      ansible.builtin.cron:
        name: "Cleanup Old User Data"
        user: galaxy # Run as the Galaxy user
        minute: "0"
        hour: "0"
        job: "GALAXY_LOG_DIR=/tmp/gxadmin/ GALAXY_ROOT={{ galaxy_root }}/server /usr/local/bin/gxadmin galaxy cleanup 60"
    - name: Setup user - group association rutine
      ansible.builtin.cron:
        name: "Add E-infra users to E-infra group"
        user: postgres # Run as the postgres user
        minute: "0"
        hour: "*"
        job: "python3 {{ playbook_dir }}/add_group_users.py {{ inventory_hostname }} {{ api_key }}"

