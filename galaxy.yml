---
- hosts: dbservers
  become: true
  become_user: root
  pre_tasks:
    - name: Install Dependencies
      package:
        name: 'acl'
  roles:
    - galaxyproject.postgresql
    - role: galaxyproject.postgresql_objects
      become: true
      become_user: postgres

- hosts: galaxyservers
  become: true
  become_user: root
  vars_files:
    - group_vars/secret.yml
  pre_tasks:
    - pip:
        name: passlib
    - htpasswd:
        path: /etc/nginx/passwd
        name: admin        # Pick a username
        password: "{{ vault_reports_admin_password }}" # and a password
        owner: www-data    # nginx on centos
        group: root
        mode: 0640
    - name: Install Dependencies
      package:
        name: ['acl', 'bzip2', 'git', 'make', 'tar', 'python3-bioblend', 'python3-venv', 'python3-setuptools', 'squashfs-tools']
    - name: Install RHEL/CentOS/Rocky specific dependencies
      package:
        name: ['tmpwatch']
      when: ansible_os_family == 'RedHat'
    - name: Install Debian/Ubuntu specific dependencies
      package:
        name: ['tmpreaper']
      when: ansible_os_family == 'Debian'
    - git:
        repo: 'https://github.com/usegalaxy-eu/libraries-training-repo'
        dest: /libraries/
    - name: Create the RBD storage directory
      file:
        owner: galaxy
        group: galaxy
        path: /rbd/data
        state: directory
        mode: '0755'
    - name: Create the nginx upload job files store
      file:
        owner: www-data
        group: galaxy
        path: /rbd/data/_upload_job_files
        state: directory
        mode: '0775'
    - name: Create the client body temp path   
      file:
        owner: www-data
        group: galaxy
        path: /rbd/data/nginx_upload_store
        state: directory
        mode: '0775'
  roles:
    - galaxyproject.tusd
    - usegalaxy_eu.apptainer
    - galaxyproject.galaxy
    - usegalaxy_eu.tpv_auto_lint
    - role: galaxyproject.miniconda
      become: true
      become_user: "{{ galaxy_user_name }}"
    - geerlingguy.redis
    - usegalaxy_eu.flower
    - galaxyproject.tiaas2
    - galaxyproject.nginx
    - galaxyproject.proftpd
    - geerlingguy.docker
    - usegalaxy_eu.rabbitmqserver
    - galaxyproject.gxadmin
    - galaxyproject.cvmfs
    - dj-wasabi.telegraf
  post_tasks:
    - name: Setup gxadmin cleanup task
      ansible.builtin.cron:
        name: "Cleanup Old User Data"
        user: galaxy # Run as the Galaxy user
        minute: "0"
        hour: "0"
        job: "GALAXY_LOG_DIR=/tmp/gxadmin/ GALAXY_ROOT={{ galaxy_root }}/server /usr/local/bin/gxadmin galaxy cleanup 60"
    - name: Setup user - group association rutine
      ansible.builtin.cron:
        name: "Add E-infra users to E-infra group"
        user: postgres # Run as the postgres user
        minute: "0"
        hour: "*"
        job: "python3 {{ playbook_dir }}/add_group_users.py {{ inventory_hostname }} {{ api_key }}"
    - name: RE Galaxy instance patch in lib/galaxy/webapps/galaxy/api/job_files.py
      replace:
        path: "{{ galaxy_root }}/server/lib/galaxy/webapps/galaxy/api/job_files.py"
        regexp: '^(\s*?)shutil\.move\(input_file\.name,\s*path\)\s*$'
        replace: '\1os.chmod(shutil.move(input_file.name, path), 0o664)'

    ## Install required Galaxy tools
    - name: Install required tools - create Ephemeris venv
      ansible.builtin.shell:
        cmd: python3 -m venv ~/ephemeris_venv
      tags: tools
    - name: Install required tools - install Ephemeris
      ansible.builtin.shell:
        cmd: source ~/ephemeris_venv/bin/activate && pip install ephemeris
      tags: tools
    - name: Install required tools - install Galaxy tools
      ansible.builtin.shell:
        cmd: ~/ephemeris_venv/bin/shed-tools install -g https://{{ inventory_hostname }} -a {{ api_key }} -t regalaxy_tool_list.yaml
      when: "'galaxy-re' in inventory_hostname"
      tags: tools
    - name: Install required tools - install Galaxy tools
      ansible.builtin.shell:
        cmd: ~/ephemeris_venv/bin/shed-tools install -g https://{{ inventory_hostname }} -a {{ api_key }} -t umsa_tool_list.yaml
      when: "'umsa' in inventory_hostname"
      tags: tools
    - name: Install required tools - install Galaxy tools
      ansible.builtin.shell:
        cmd: ~/ephemeris_venv/bin/shed-tools install -g https://{{ inventory_hostname }} -a {{ api_key }} -t eu_tool_list.yaml
      when: "'usegalaxy' in inventory_hostname or 'galaxy-cz' in inventory_hostname"
      tags: tools
