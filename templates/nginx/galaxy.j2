upstream galaxy {
	server {{ galaxy_config.gravity.gunicorn.bind }};

	# Or if you serve galaxy at a path like http(s)://fqdn/galaxy
	# Remember to set galaxy_url_prefix in the galaxy.yml file.
	# server {{ galaxy_config.gravity.gunicorn.bind }}:/galaxy;
}

server {
	# Listen on port 443
	listen        *:443 ssl default_server;
	# The virtualhost is our domain name
	server_name   "{{ inventory_hostname }}";

	# Our log files will go to journalctl
	access_log  syslog:server=unix:/dev/log;
	error_log   syslog:server=unix:/dev/log;
	# client_body_temp_path  /rbd/data/nginx_upload_store;
	client_body_buffer_size 1024m;
        client_max_body_size        20G;

	# The most important location block, by default all requests are sent to gunicorn
	# If you serve galaxy at a path like /galaxy, change that below (and all other locations!)
	location / {
		# This is the backend to send the requests to.
		proxy_pass http://galaxy;
		proxy_set_header Host $http_host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Upgrade $http_upgrade;
	}

	location /_job_files {
		if ($request_method != POST) {
				rewrite "" /api/jobs/$arg_job_id/files last;
		}
		upload_store {{ galaxy_config['galaxy']['nginx_upload_job_files_store'] }};
                # the rate limit might be needed if we have many Pulsar jobs that are writing data back
		# we need to limit it because the disc IO can be too large, ideally this happens on a different node
                # upload_limit_rate 32k;
		upload_store_access user:rw group:rw all:rw;
		upload_pass_form_field "";
		upload_set_form_field "__${upload_field_name}_path" "$upload_tmp_path";
		upload_pass_args on;
		upload_pass /_upload_job_files_done;
	}

	location /_upload_job_files_done {
		internal;
		rewrite "" /api/jobs/$arg_job_id/files;
	}

	location /api/upload/resumable_upload {
		# Disable request and response buffering
		proxy_request_buffering     off;
		proxy_buffering             off;
		proxy_http_version          1.1;

		# Add X-Forwarded-* headers
		proxy_set_header X-Forwarded-Host   $host;
		proxy_set_header X-Forwarded-Proto  $scheme;

		proxy_set_header Upgrade            $http_upgrade;
		proxy_set_header Connection         "upgrade";
		client_max_body_size        0;
		proxy_pass http://localhost:{{ galaxy_tusd_port }}/files;
	}

	# Static files can be more efficiently served by Nginx. Why send the
	# request to Gunicorn which should be spending its time doing more useful
	# things like serving Galaxy!
	location /static {
		alias {{ galaxy_server_dir }}/static;
		expires 24h;
	}

	# In Galaxy instances started with run.sh, many config files are
	# automatically copied around. The welcome page is one of them. In
	# production, this step is skipped, so we will manually alias that.
	location /static/welcome.html {
		alias {{ galaxy_mutable_config_dir }}/welcome.html;
		expires 24h;
	}

	# serve visualization and interactive environment plugin static content
	location ~ ^/plugins/(?<plug_type>[^/]+?)/((?<vis_d>[^/_]*)_?)?(?<vis_name>[^/]*?)/static/(?<static_file>.*?)$ {
		alias {{ galaxy_server_dir }}/config/plugins/$plug_type/;
		try_files $vis_d/${vis_d}_${vis_name}/static/$static_file
		          $vis_d/static/$static_file =404;
	}

	location /robots.txt {
		alias {{ galaxy_server_dir }}/static/robots.txt;
	}

	location /favicon.ico {
		alias {{ galaxy_server_dir }}/static/favicon.ico;
	}

	location /_x_accel_redirect {
		internal;
		alias /;
	}

	# Support click-to-run in the GTN-in-Galaxy Webhook
	location /training-material/ {
		proxy_pass https://training.galaxyproject.org/training-material/;
	}

	location ~* /rabbitmq/(.*) {
		rewrite ^/rabbitmq/(.*)$ /$1 break;
		proxy_pass http://127.0.0.1:15672;
		proxy_buffering                    off;
		proxy_set_header Host              $http_host;
		proxy_set_header X-Real-IP         $remote_addr;
		proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /flower {
		proxy_pass http://localhost:5555;
		proxy_set_header Host $host;
		proxy_redirect off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}

	location /reports/ {
		auth_basic           galaxy;
                auth_basic_user_file /etc/nginx/passwd;
		proxy_pass http://{{ galaxy_config.gravity.reports.bind }}:/;
	}

	location /grafana/ {
		proxy_pass http://127.0.0.1:3000/;
		proxy_set_header Host $http_host;
	}

	{{ tiaas_nginx_routes }}

}
  
